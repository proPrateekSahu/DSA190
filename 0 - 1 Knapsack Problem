class Solution
{
    int dp[1001][1001];
    public:
    int solve (int w, int wt[], int val[], int n){
        for(int i=1;i<n+1;i++){
            for(int j=1;j<w+1;j++){
                if(wt[i-1]<=j){
                    dp[i][j]=max(val[i-1]+dp[i-1][j-wt[i-1]],dp[i-1][j]);
                }
                else{
                    dp[i][j]=dp[i-1][j];
                }
            }
        }
    }
    //Function to return max value that can be put in knapsack of capacity W.
    int knapSack(int W, int wt[], int val[], int n) 
    { 
        
        memset(dp,0,sizeof(dp));
        solve(W,wt,val,n);
        return dp[n][W];
       // Your code here
    }
};
