/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int solve(TreeNode * r){
        if(!r)return 0;
        if(!r->left && !r->right)return 1;

        return (1+ max(solve(r->left),solve(r->right)));
    }
    bool isBalanced(TreeNode* root) {
        if(!root || root->left==NULL && root->right==NULL)return true;

        int h1= solve(root->left);
        int h2= solve(root->right);



        if(abs(h1-h2)<2 && isBalanced(root->left) && isBalanced(root->right))return true;
        return false;

    }
};
