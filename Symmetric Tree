/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool solve(TreeNode * r , TreeNode* l){
        if(r==NULL && l==NULL)return true;
        if(l==NULL || r==NULL)return false;
        if(l->val != r->val)return false;
        if(!r->left && !r->right && !l->left && !l->right ){
            if(l->val == r->val)
            return true;
            else
            return false;
            }
        
        return solve(l->left, r->right) && solve(l->right,r->left);
    }
    bool isSymmetric(TreeNode* root) {
        if(root==NULL)return true;
        return solve(root->right, root->left);
    }
};
