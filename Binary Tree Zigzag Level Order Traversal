Input: root = [3,9,20,null,null,15,7]
Output: [[3],[20,9],[15,7]]
Example 2:

Input: root = [1]
Output: [[1]]
Example 3:

Input: root = []
Output: []

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>>ans;
    queue<TreeNode* >q;
    bool flag =false;
    void solve(TreeNode* r){
        if(r==NULL)return ;
        q.push(r);
        while(!q.empty()){
           
            int size= q.size();
            flag=!flag;
            vector<int>t;
            for(int i=0;i<size;i++){
                 TreeNode * temp = q.front();
                 q.pop();
                t.push_back(temp->val);
                if(temp->left!=NULL)
                q.push(temp->left);
                if(temp->right)
                q.push(temp->right);
               
            }
            if(flag){
                ans.push_back(t);
            }
            else{
                reverse(t.begin(),t.end());
                ans.push_back(t);
            }
        }



    }
    vector<vector<int>> zigzagLevelOrder(TreeNode* root) {
        
        solve(root);
        return ans;
    }
};
