/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int diameter=0;
    int helper(TreeNode*r){
        if(r==NULL)return -1;
        if(r->left==NULL && r->right==NULL)return 0;
        int hl=0,hr=0;
        if(r->left!=NULL)
            hl=1+helper(r->left);
        if(r->right!=NULL)
            hr=1+helper(r->right);
        diameter=max(diameter,hl+hr);
        return max(hl,hr);
            
    }
    int diameterOfBinaryTree(TreeNode* root) {
        int hrr=helper(root);
        return diameter;
    }
};
