class Solution {
public:
    string longestPalindrome(string s) {
        int n=s.length();
        bool t[n+1][n+1];
        int maxi=INT_MIN;
        int p,q;
        for(int g=0;g<n;g++){
            for(int i=0,j=g;j<n;i++,j++){
                if(g==0){
                    t[i][j]=true;
                    maxi=max(maxi,j-i+1);
                    if(maxi==j-i+1){
                        p=i;
                        q=j;
                    }
                }
                else if(g==1){
                    if(s[i]==s[j]){
                        t[i][j]=true;
                            maxi=max(maxi,j-i+1);
                        if(maxi==j-i+1){
                            p=i;
                            q=j;
                        }
                    }
                    else{
                        t[i][j]=false;
                    }
                    
                }
                else{
                    if(s[i]==s[j]&& t[i+1][j-1]){
                        t[i][j]=true;
                            maxi=max(maxi,j-i+1);
                        if(maxi==j-i+1){
                            p=i;
                            q=j;
                        }
                    }
                    else{
                        t[i][j]=false;
                    }
                }
            }
        }
        string ans=s.substr(p,q-p+1);
        return ans;
        
    }
};
